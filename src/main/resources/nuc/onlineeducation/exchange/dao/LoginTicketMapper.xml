<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nuc.onlineeducation.exchange.dao.LoginTicketMapper">
    <resultMap id="BaseResultMap" type="nuc.onlineeducation.exchange.model.LoginTicket">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="ticket" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="expired" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, ticket, expired, status, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from exchange_login_ticket
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM exchange_login_ticket
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="nuc.onlineeducation.exchange.model.LoginTicket">
        INSERT INTO exchange_login_ticket (id, user_id, ticket,
                                           expired, status, create_time,
                                           update_time)
        VALUES (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{ticket,jdbcType=VARCHAR},
                #{expired,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, now(),
                now())
    </insert>
    <insert id="insertSelective" parameterType="nuc.onlineeducation.exchange.model.LoginTicket">
        insert into exchange_login_ticket
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="ticket != null">
                ticket,
            </if>
            <if test="expired != null">
                expired,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="ticket != null">
                #{ticket,jdbcType=VARCHAR},
            </if>
            <if test="expired != null">
                #{expired,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                now(),
            </if>
            <if test="updateTime != null">
                now(),
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="nuc.onlineeducation.exchange.model.LoginTicket">
        update exchange_login_ticket
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="ticket != null">
                ticket = #{ticket,jdbcType=VARCHAR},
            </if>
            <if test="expired != null">
                expired = #{expired,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="nuc.onlineeducation.exchange.model.LoginTicket">
        UPDATE exchange_login_ticket
        SET user_id     = #{userId,jdbcType=INTEGER},
            ticket      = #{ticket,jdbcType=VARCHAR},
            expired     = #{expired,jdbcType=TIMESTAMP},
            status      = #{status,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = now()
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByTicket" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List"/>
        FROM exchange_login_ticket
        WHERE ticket = #{ticket}
        AND status = 0
    </select>
    <update id="updateStatusByTicketAndStatus" parameterType="map">
        UPDATE exchange_login_ticket
        SET status = #{status}
        WHERE ticket = #{ticket}
    </update>
    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="int">
        SELECT
        <include refid="Base_Column_List"/>
        FROM exchange_login_ticket
        WHERE user_id = #{userId}
        AND status = 0
    </select>
</mapper>